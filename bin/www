#!/usr/bin/env node
/*
  Script to start express application.
*/

var app=require('../app');

var debug=require('debug')('test:server');
var http=require('http');

var config=require('../config');

// Get port from env and store in express
var port = normalizePort(process.env.PORT || config.expressPort);
app.set('port',port);

// Create Http server
var server = http.createServer(app);

server.listen(port);
server.on('error', onError);
server.on('listening', onListening);

// normalizePort into number, string or false;
function normalizePort(val){
  var port = parseInt(val,10);

  if(isNaN(port)){
    //named pipe
    return val;
  }
  if(port >=0){
    // port number
    return port;
  }
  return false;
}

// Event Listener for http server
function onError(error){
  if(error.syscall !=='listen') {
    throw error;
  }
  var bind = typeof port === 'string' ? 'Pipe' + port : 'Port' + port;

  // Handle specific listen errors with friendly messages
  switch(error.code){
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

// Event listener for HTTP server listening event
function onListening(){
  var addr=server.address();
  var bind=typeof addr === 'string' ? 'pipe' + addr : 'port' + addr.port;
  debug('Listening on '+ bind);
}
